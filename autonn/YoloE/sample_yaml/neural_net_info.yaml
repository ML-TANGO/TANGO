# 'neural_net_info.yaml'
# meta file from auto_nn

# NN Model
base_dir_autonn: 'yoloe_core/yolov7_utils'
class_file: ['models/yolo.py', 'basemodel.yaml', 'models/common.py', 'models/experimental.py', 'utils/autoanchor.py', 'utils/datasets.py', 'utils/general.py', 'utils/torch_utils.py', 'utils/loss.py', 'utils/metrics.py', 'utils/plots.py', 'utils/google_utils.py']
class_name: Model(cfg='basemodel.yaml')
weight_file: yoloe.pt


# Input
input_tensor_shape: [1, 3, 640, 640]
input_data_type: fp32 # fp32, fp16, int8, etc
# anchors: 3
anchors:
  - [10,13, 16,30, 33,23]  # P3
  - [30,61, 62,45, 59,119]  # P4
  - [116,90, 156,198, 373,326]  # P5


# Output
output_number: 3 # number of output layers (ex. 3-floor pyramid; P3, P4, P5)
output_size: # [batch_size, anchors, pred, height, width]
  [[1, 3, 20, 20, 85],
   [1, 3, 40, 40, 85],
   [1, 3, 80, 80, 85],
  ]
output_pred_format: # 85 = 4(coordinate) + 1(confidence score) + 80(probablity of classes)
  ['x', 'y', 'w', 'h', 'confidence', 'probability_of_classes']


# Post-processing
conf_thres: 0.25 # for NMS
iou_thres: 0.45 # for NMS
