#!/usr/bin/env python
"""Django's command-line utility for administrative tasks."""
import os
import sys

"""
    source(autonn) ðŸš© BASE_DIR
        â”œâ”€â”€ Dockerfile
        â”œâ”€â”€ manage.py
        â”œâ”€â”€ requirement.txt
        â”œâ”€â”€ autonn_core
        â”‚       â”œâ”€ __init__.py
        â”‚       â”œâ”€ admin.py
        â”‚       â”œâ”€ apps.py
        â”‚       â”œâ”€ models.py
        â”‚       â”œâ”€ serializers.py
        â”‚       â”œâ”€ urls.py
        â”‚       â”œâ”€ views.py
        â”‚       â”œâ”€ migrations
        â”‚       â”‚   â””â”€ __init__.py
        â”‚       â”œâ”€ datasets
        â”‚       â”‚   â”œâ”€ coco
        â”‚       â”‚   â”œâ”€ coco128
        â”‚       â”‚   â”œâ”€ imagenet
        â”‚       â”‚   â””â”€ voc
        â”‚       â””â”€ tango ðŸ’ƒ 'tango' modules
        â”‚           â”œâ”€ common
        â”‚           â”‚   â”œâ”€ cfg
        â”‚           â”‚   â”‚    â”œâ”€ resnet
        â”‚           â”‚   â”‚    â””â”€ yolov7
        â”‚           â”‚   â””â”€ model
        â”‚           â”‚        â”œâ”€ ofa_utils
        â”‚           â”‚        â”œâ”€ __init__.py
        â”‚           â”‚        â”œâ”€ common.py
        â”‚           â”‚        â”œâ”€ dynamic_layer.py
        â”‚           â”‚        â”œâ”€ dynamic_op.py
        â”‚           â”‚        â”œâ”€ experimental.py
        â”‚           â”‚        â”œâ”€ search_block.py
        â”‚           â”‚        â”œâ”€ supernet_yolov7.py
        â”‚           â”‚        â”œâ”€ yolo.py
        â”‚           â”‚        â””â”€ yolo_nas.py
        â”‚           â”œâ”€ main
        â”‚           â”‚   â”œâ”€ __init__.py
        â”‚           â”‚   â”œâ”€ classify.py
        â”‚           â”‚   â”œâ”€ detect.py
        â”‚           â”‚   â”œâ”€ export.py
        â”‚           â”‚   â”œâ”€ finetune.py
        â”‚           â”‚   â”œâ”€ search.py
        â”‚           â”‚   â”œâ”€ test.py
        â”‚           â”‚   â”œâ”€ train.py
        â”‚           â”‚   â””â”€ train_aux.py
        â”‚           â”œâ”€ nas
        â”‚           â”‚   â”œâ”€ predictors
        â”‚           â”‚   â””â”€ search_algorithm
        â”‚           â”œâ”€ hpo
        â”‚           â”œâ”€ viz
        â”‚           â”‚   â”œâ”€ binder.py
        â”‚           â”‚   â”œâ”€ graph.py
        â”‚           â”‚   â”œâ”€ layer_definition.py
        â”‚           â”‚   â””â”€ node_edge.py
        â”‚           â””â”€ utils
        â”‚               â”œâ”€ __init__.py
        â”‚               â”œâ”€ activations.py
        â”‚               â”œâ”€ autoanchor.py
        â”‚               â”œâ”€ autobatch.py
        â”‚               â”œâ”€ datasets.py
        â”‚               â”œâ”€ general.py
        â”‚               â”œâ”€ loss.py
        â”‚               â”œâ”€ metrics.py
        â”‚               â”œâ”€ nms.py
        â”‚               â”œâ”€ plots.py
        â”‚               â”œâ”€ google_utils.py
        â”‚               â””â”€ torch_utils.py
        â”œâ”€â”€ config
        â”‚       â”œâ”€ __init__.py
        â”‚       â”œâ”€ settings.py
        â”‚       â”œâ”€ urls.py
        â”‚       â”œâ”€ asgi.py
        â”‚       â””â”€ wsgi.py
        â””â”€â”€ visualization
                â”œâ”€ public
                â”œâ”€ src
                â””â”€ package.json
"""

def main():
    """Run administrative tasks."""
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
    try:
        from django.core.management import execute_from_command_line

    except ImportError as exc:
        raise ImportError(
            "Couldn't import Django. Are you sure it's installed and "
            "available on your PYTHONPATH environment variable? Did you "
            "forget to activate a virtual environment?"
        ) from exc
    execute_from_command_line(sys.argv)


if __name__ == '__main__':
    main()
